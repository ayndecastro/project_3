{"version":3,"sources":["components/Map/Map.js","components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Map","e","code","alert","react_default","a","createElement","className","build","map","backgroundColor","zoomOnScroll","containerStyle","width","height","onRegionClick","this","handleClick","containerClassName","regionStyle","initial","fill","fill-opacity","stroke","stroke-width","stroke-opacity","hover","cursor","selected","selectedHover","regionsSelectableOne","series","regions","scale","normalizeFunction","Component","withStyles","theme","root","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","&:hover","spacing","unit","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","createMuiTheme","primary","light","main","dark","contrastText","secondary","paper","App","core_styles","Grid_default","container","item","xs","Paper_default","NavBar","components_Map_Map","justify","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e68e0853.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { VectorMap } from \"react-jvectormap\"\r\n\r\nclass Map extends Component {\r\n\r\n    handleClick(e, code) {\r\n        alert(code)\r\n\r\n    }\r\n\r\n    render () {\r\n  return (\r\n    <div className=\"map\">\r\n    <VectorMap\r\n    map={\"world_mill\"}\r\n    backgroundColor=\"#232F34\"\r\n    zoomOnScroll={false}\r\n    containerStyle={{\r\n      width: \"100%\",\r\n      height: \"80vh\"\r\n    }}\r\n    onRegionClick={this.handleClick}\r\n    containerClassName=\"map\"\r\n      regionStyle={{\r\n        initial: {\r\n          fill: \"#ffd740\",\r\n          \"fill-opacity\": 1,\r\n          stroke: \"none\",\r\n          \"stroke-width\": 1,\r\n          \"stroke-opacity\": 1\r\n        },\r\n        hover: {\r\n            \"fill\": \"#ffff74\",\r\n          \"fill-opacity\": 1,\r\n          cursor: 'pointer'\r\n        },\r\n        selected: {\r\n          fill: '#ffff74'  //what colour clicked country will be\r\n        },\r\n        selectedHover: {\r\n        }      \r\n      }}\r\n      regionsSelectableOne={true}\r\n      series={{\r\n        regions: [\r\n          {\r\n            // values: mapData,  //this is your data\r\n            scale: [\"#146804\", \"#ff0000\"],  //your color game's here\r\n            normalizeFunction: \"polynomial\"\r\n          }\r\n        ]\r\n      }}\r\n  />\r\n    </div>\r\n  );\r\n    }\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            SafeTravels\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchAppBar);","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport Map from \"./components/Map/Map\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport \"./App.css\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#718792\",\r\n      main: \"#1c313a\",\r\n      dark: \"#455a64\",\r\n      contrastText: \"#ffffff\"\r\n    },\r\n    secondary: {\r\n      light: \"#ffff74\",\r\n      main: \"#ffd740\",\r\n      dark: \"#c8a600\",\r\n      contrastText: \"#000000\"\r\n    },\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={12}>\r\n              <Paper className={theme.paper}>\r\n                <NavBar />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Paper className={theme.paper}>\r\n                <Map justify=\"center\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}